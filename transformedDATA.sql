DROP TABLE if exists `TRANSFORMED`;
CREATE TABLE transformed(
    TRANSACTION_ID DOUBLE(8,0) NOT NULL, 
  PRODUCT_ID VARCHAR(6) NOT NULL, 
  CUSTOMER_ID VARCHAR(4) NOT NULL, 
  STORE_ID VARCHAR(4) NOT NULL, 
  STORE_NAME VARCHAR(20) NOT NULL, 
  TIME_ID VARCHAR(8) NOT NULL, 
  T_DATE DATE NOT NULL,
  QUANTITY DOUBLE(3,0) NOT NULL,
  PRODUCT_NAME VARCHAR(30) NOT NULL, 
	SUPPLIER_ID VARCHAR(5) NOT NULL, 
	SUPPLIER_NAME VARCHAR(30) NOT NULL, 
	PRICE DOUBLE(5,2) DEFAULT 0.0,
    CUSTOMER_NAME VARCHAR(30) not null,
    SALE INT,
  CONSTRAINT `transformed_t1_fkey` FOREIGN KEY (TRANSACTION_ID) REFERENCES transactions (TRANSACTION_ID),
  CONSTRAINT `transformed_t2_fkey` FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (PRODUCT_ID),
  CONSTRAINT `transformed_t3_fkey` FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS (CUSTOMER_ID)
);
INSERT INTO transformed (TRANSACTION_ID,PRODUCT_ID,CUSTOMER_ID,STORE_ID,STORE_NAME,TIME_ID,T_DATE,QUANTITY,PRODUCT_NAME,SUPPLIER_ID,SUPPLIER_NAME,PRICE,CUSTOMER_NAME,SALE)
SELECT T.TRANSACTION_ID,T.PRODUCT_ID,T.CUSTOMER_ID,T.STORE_ID,T.STORE_NAME,T.TIME_ID,T.T_DATE,T.QUANTITY,P.PRODUCT_NAME,P.SUPPLIER_ID,P.SUPPLIER_NAME,P.PRICE,C.CUSTOMER_NAME,P.PRICE*T.QUANTITY
FROM transactions T, products P, customers C
WHERE T.PRODUCT_ID=P.PRODUCT_ID and T.CUSTOMER_ID=C.CUSTOMER_ID